{%- from "kubernetes/map.jinja" import master with context %}
# Calico Version v3.1.3
# https://docs.projectcalico.org/v3.1/releases#v3.1.3
# This manifest includes the following component versions:
#   calico/kube-controllers:v3.1.3
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: calico-kube-controllers
  namespace: kube-system
  labels:
    k8s-app: calico-kube-controllers
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  # Only a single instance of the this pod should be
  # active at a time. Since this pod is run as a Deployment,
  # Kubernetes will ensure the pod is recreated in case of failure,
  # removing the need for passive backups.
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      k8s-app: calico-kube-controllers
  template:
    metadata:
      name: calico-kube-controllers
      namespace: kube-system
      labels:
        k8s-app: calico-kube-controllers
    spec:
      # The controllers must run in the host network namespace so that
      # it isn't governed by policy that would prevent it from working.
      hostNetwork: true
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      serviceAccountName: calico-kube-controllers
      containers:
        - name: calico-kube-controllers
          # Make sure to pin this to your desired version.
          image: {{ master.network.calico.kube_controllers_image }}
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 100m
              memory: 256M
            requests:
              cpu: 30m
              memory: 64M
          env:
            # The list of etcd nodes in the cluster.
            - name: ETCD_ENDPOINTS
              value: "{% for member in master.network.calico.etcd.members %}http{% if master.network.calico.etcd.get('ssl', {}).get('enabled') %}s{% endif %}://{{ member.host }}:{{ member.port }}{% if not loop.last %},{% endif %}{% endfor %}"
{%- if master.network.calico.etcd.get('ssl', {}).get('enabled') %}
            # CA certificate, client certificate, client key files for accessing the etcd cluster.
            - name: ETCD_CA_CERT_FILE
              value: "/var/lib/etcd/ca.pem"
            - name: ETCD_CERT_FILE
              value: "/var/lib/etcd/etcd-client.pem"
            - name: ETCD_KEY_FILE
              value: "/var/lib/etcd/etcd-client.pem"
{%- endif %}
            # Which controllers to run.
            - name: ENABLED_CONTROLLERS
              value: "policy,profile,workloadendpoint,node"
            # Minimum log level to be displayed.
            - name: LOG_LEVEL
              value: "info"
            # Period to perform reconciliation with the Calico datastore. Default is 5m.
            - name: RECONCILER_PERIOD
              value: "1m"
          volumeMounts:
          - mountPath: /var/lib/etcd/
            name: etcd-certs
            readOnly: true
      volumes:
      - hostPath:
          path: /var/lib/etcd
        name: etcd-certs

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: calico-kube-controllers
  namespace: kube-system
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
