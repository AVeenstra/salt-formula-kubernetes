{%- from "kubernetes/map.jinja" import common with context -%}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: fluentd-aggregator
  namespace: {{ common.addons.fluentd.get('namespace', 'stacklight') }}
  labels:
    k8s-app: fluentd-aggregator
    version: v1
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: fluentd-aggregator
  template:
    metadata:
      labels:
        k8s-app: fluentd-aggregator
        version: v1
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        scheduler.alpha.kubernetes.io/tolerations: '[{"key":"CriticalAddonsOnly", "operator":"Exists"}]'
    spec:
      serviceAccountName: fluentd
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      containers:
      - name: fluentd-aggregator
        image: {{ common.addons.fluentd.aggregator.get('image', 'fluent/fluentd-kubernetes-daemonset:v1.2-debian-elasticsearch') }}
        env:
          - name: FLUENTD_ELASTICSEARCH_HOST
            value: "{{ common.addons.fluentd.aggregator.config.output.es.get('host', '127.0.0.1') }}"
          - name: FLUENTD_ELASTICSEARCH_PORT
            value: "{{ common.addons.fluentd.aggregator.config.output.es.get('port', '9200') }}"
          - name: FLUENTD_ELASTICSEARCH_SCHEME
            value: "{{ common.addons.fluentd.aggregator.config.output.es.get('scheme', 'http') }}"
          - name: FLUENTD_AGGREGATOR_BIND_PORT
            value: "{{ common.addons.fluentd.aggregator.config.forward_input.bind.get('port', '24224') }}"
          - name: ENVIRONMENT_LABEL
            value: "{{ grains.domain }}"
         # TODO: a hack to pass the broken entrypoint in upstream docker image for k8s fluent when configmap is used
          - name: FLUENT_ELASTICSEARCH_USER
            value: "null"
          - name: FLUENT_ELASTICSEARCH_PASSWORD
            value: "null"
        resources:
          limits:
            memory: {{ common.addons.fluentd.aggregator.resources.limits.get('memory', '500Mi') }}
          requests:
            memory: {{ common.addons.fluentd.aggregator.resources.requests.get('memory', '500Mi') }}
        ports:
        - containerPort: {{ common.addons.fluentd.aggregator.config.forward_input.bind.get('port', '24224') }}
          name: main-input
          protocol: TCP
        - containerPort: 9880
          name: health-check
          protocol: TCP
        volumeMounts:
        - name: fluentd-aggregator-config
          mountPath: /fluentd/etc
          readOnly: false
      volumes:
      - name: fluentd-aggregator-config
        configMap:
          name: fluentd-aggregator-cfg
