---
kind: ConfigMap
apiVersion: v1
metadata:
  name: fluentd-aggregator-cfg
  namespace: stacklight
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
data:
  fluent.conf: |
    @include forward-input.conf
    @include general.conf
    @include kubernetes-filter.conf
    @include systemd-filter.conf
    @include output.conf

  forward-input.conf: |
    <source>
      @type forward
      port "#{ENV['FLUENTD_AGGREGATOR_BIND_PORT']}"
      bind 0.0.0.0
    </source>

  general.conf: |
    <match fluent.**>
      @type null
    </match>
    <source>
      @type http
      port 9880
      bind 0.0.0.0
    </source>
    <filter **>
      @type record_transformer
      enable_ruby
      <record>
        Type log
        environment_label "#{ENV['ENVIRONMENT_LABEL']}"
        Hostname ${ hostname }
        Timestamp ${ time.strftime('%Y-%m-%dT%H:%M:%S.%N%z') }
      </record>
    </filter>

  kubernetes-filter.conf: |
    <filter temp.kubernetes.**>
      @type kubernetes_metadata
      merge_json_log true
      preserve_json_log true
    </filter>
    <filter temp.kubernetes.**>
      @type record_transformer
      enable_ruby true
      remove_keys log
      <record>
        kubernetes_namespace_container_name ${record["kubernetes"]["namespace_name"]}.${record["kubernetes"]["container_name"]}
        Payload ${record['log']}
      </record>
    </filter>
    <filter temp.kubernetes.kube-system.**>
      @type parser
      format kubernetes
      reserve_data true
      key_name log
      suppress_parse_error_log true
    </filter>
    <filter temp.kubernetes.container.**>
      @type record_transformer
      enable_ruby
      <record>
        severity_label INFO
        Severity 6
        programname ${ record['kubernetes']['container_name'] }
      </record>
    </filter>

  systemd-filter.conf: |
    <match systemd.source>
      @type rewrite_tag_filter
      <rule>
        key ident
        pattern ^(.*)$
        tag __TAG__.$1
      </rule>
    </match>
    <filter systemd.source.kubelet>
      type parser
      format kubernetes
      reserve_data true
      key_name MESSAGE
      suppress_parse_error_log true
    </filter>
    <filter systemd.source.docker>
      type parser
      format /^time="(?<time>[^)]*)" level=(?<severity>[^ ]*) msg="(?<message>[^"]*)"( err="(?<error>[^"]*)")?( statusCode=($<status_code>\d+))?/
      reserve_data true
      key_name MESSAGE
      suppress_parse_error_log true
    </filter>

  output.conf: |
    <match temp.kubernetes.container.**>
      @type rewrite_tag_filter
      <rule>
        key log_path
        pattern ^.*\/(.*)\.log$
        tag kubernetes.container.$1
      </rule>
    </match>

    <match **>
      @type elasticsearch
      log_level debug
      host "#{ENV['FLUENTD_ELASTICSEARCH_HOST']}"
      port "#{ENV['FLUENTD_ELASTICSEARCH_PORT']}"
      scheme "#{ENV['FLUENTD_ELASTICSEARCH_SCHEME'] || 'http'}"
      ssl_verify "#{ENV['FLUENTD_ELASTICSEARCH_SSL_VERIFY'] || 'true'}"
      reload_connections "#{ENV['FLUENTD_ELASTICSEARCH_RELOAD_CONNECTIONS'] || 'true'}"
      type_name message
      include_tag_key true
      time_key Timestamp
      time_key_exclude_timestamp true
      logstash_format true
      logstash_prefix k8s
      logstash_dateformat %Y.%m.%d
      request_timeout 10s
      buffer_chunk_limit 2M
      buffer_queue_limit 32
      flush_interval 10s
      max_retry_wait 30
      disable_retry_limit
      num_threads 8
    </match>
