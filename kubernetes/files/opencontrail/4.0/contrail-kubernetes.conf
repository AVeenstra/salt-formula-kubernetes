{%- from "kubernetes/map.jinja" import master with context %}
[KUBERNETES]
kubernetes_api_server={{ master.apiserver.insecure_address }}
kubernetes_api_port={{ master.apiserver.insecure_port }}
kubernetes_api_secure_port={{ master.apiserver.secure_port }}
service_subnets={{ master.network.get('service_subnets', '10.96.0.0/12') }}
pod_subnets={{ master.network.get('pod_subnets', '10.32.0.0/12') }}
cluster_name={{ master.network.get('cluster_name', 'default') }}
cluster_project={{ master.network.get('cluster_project', '{}') }}
cluster_network={{ master.network.get('cluster_network', '') }}
kubernetes_cluster_domain={{ master.network.get('cluster_domain', 'default-domain') }}
kubernetes_cluster_name={{ master.network.get('cluster_name', 'kubernetes') }}
kubernetes_cluster_owner={{ master.network.get('cluster_owner', 'k8s') }}
kubernetes_service_name={{ master.network.get('service_name', 'kubernetes') }}

[VNC]
vnc_endpoint_ip = {{ master.network.config.api.host }}
vnc_endpoint_port = {{ master.network.config.api.get('port', 8082) }}
admin_user = {{ master.network.identity.get('auth_user', 'admin') }}
admin_password = {{ master.network.identity.get('auth_password', 'admin') }}
admin_tenant = {{ master.network.identity.get('auth_tenant', 'admin') }}
rabbit_server={{ master.network.message_queue.host }}
rabbit_port={{ master.network.message_queue.get('port', 5672) }}
rabbit_user={{ master.network.message_queue.get('user', 'guest') }}
rabbit_password={{ master.network.message_queue.get('password', 'guest') }}
rabbit_vhost={{ master.network.message_queue.get('vhost', '/') }}
rabbit_ha_mode={{ master.network.message_queue.get('ha_mode', False) }}
rabbit_use_ssl={{ master.network.message_queue.get('use_ssl', False) }}
{%- if master.network.message_queue.get('use_ssl', False) == True %}
kombu_ssl_version={{ master.network.message_queue.ssl_version }}
kombu_ssl_keyfile={{ master.network.message_queue.ssl_keyfile }}
kombu_ssl_certfile={{ master.network.message_queue.ssl_certfile }}
kombu_ssl_ca_certs={{ master.network.message_queue.ssl_ca_certs }}
{%- endif %}
cassandra_server_list={% for member in master.network.database.members %}{{ member.host }}:9160 {% endfor %}
cassandra_user={{ master.network.database.get('user', None) }}
cassandra_password={{ master.network.database.get('password', None) }}
cluster_id=
public_fip_pool={{ master.network.get('public_pool', '{}') }}

[DEFAULTS]
log_local=1
log_level=SYS_DEBUG
log_file=/var/log/contrail/contrail-kube-manager.log
collectors={% for member in master.network.collector.members %}{{ member.host }}:8086 {% endfor %}
nested_mode={{ master.network.get('nested_mode', 0) }}

[SANDESH]
#sandesh_ssl_enable=False
#introspect_ssl_enable=False
#sandesh_keyfile=/etc/contrail/ssl/private/server-privkey.pem
#sandesh_certfile=/etc/contrail/ssl/certs/server.pem
#sandesh_ca_cert=/etc/contrail/ssl/certs/ca-cert.pem

[AUTH]
auth_token_url={{ master.network.identity.get('auth_token_url', None) }}
auth_user={{ master.network.identity.get('auth_user', 'admin') }}
auth_password={{ master.network.identity.get('auth_token_url', 'admin') }}
auth_tenant={{ master.network.identity.get('auth_token_url', 'admin') }}
