{%- from "kubernetes/map.jinja" import master with context %}
{%- from "kubernetes/map.jinja" import pool with context %}

{%- if pool.get('enabled', False) %}
{% set network = pool.get('network', []) %}
{%- else %}
{%- if master.get('enabled', False) %}
{% set network = master.get('network', []) %}
{% endif %}
{% endif %}

{% raw %}
server:
  recording:
    - name: cluster_namespace_controller_pod_container:spec_memory_limit_bytes
      query: >-
        sum by (cluster,namespace,controller,pod_name,container_name) (
          label_replace(
            container_spec_memory_limit_bytes{container_name!=""},
            "controller", "$1",
            "pod_name", "^(.*)-[a-z0-9]+"
          )
        )
    - name: cluster_namespace_controller_pod_container:spec_cpu_shares
      query: >-
        sum by (cluster,namespace,controller,pod_name,container_name) (
          label_replace(
            container_spec_cpu_shares{container_name!=""},
            "controller", "$1",
            "pod_name", "^(.*)-[a-z0-9]+"
          )
        )
    - name: cluster_namespace_controller_pod_container:cpu_usage:rate
      query: >-
        sum by (cluster,namespace,controller,pod_name,container_name) (
          label_replace(
            irate(
              container_cpu_usage_seconds_total{container_name!=""}[5m]
            ),
            "controller", "$1",
            "pod_name", "^(.*)-[a-z0-9]+"
          )
        )
    - name: cluster_namespace_controller_pod_container:memory_usage:bytes
      query: >-
        sum by (cluster,namespace,controller,pod_name,container_name) (
          label_replace(
            container_memory_usage_bytes{container_name!=""},
            "controller", "$1",
            "pod_name", "^(.*)-[a-z0-9]+"
          )
        )
    - name: cluster_namespace_controller_pod_container:memory_working_set:bytes
      query: >-
        sum by (cluster,namespace,controller,pod_name,container_name) (
          label_replace(
            container_memory_working_set_bytes{container_name!=""},
            "controller", "$1",
            "pod_name", "^(.*)-[a-z0-9]+"
          )
        )
    - name: cluster_namespace_controller_pod_container:memory_rss:bytes
      query: >-
        sum by (cluster,namespace,controller,pod_name,container_name) (
          label_replace(
            container_memory_rss{container_name!=""},
            "controller", "$1",
            "pod_name", "^(.*)-[a-z0-9]+"
          )
        )
    - name: cluster_namespace_controller_pod_container:memory_cache:bytes
      query: >-
        sum by (cluster,namespace,controller,pod_name,container_name) (
          label_replace(
            container_memory_cache{container_name!=""},
            "controller", "$1",
            "pod_name", "^(.*)-[a-z0-9]+"
          )
        )
    - name: cluster_namespace_controller_pod_container:disk_usage:bytes
      query: >-
        sum by (cluster,namespace,controller,pod_name,container_name) (
          label_replace(
            container_fs_usage_bytes{container_name!=""},
            "controller", "$1",
            "pod_name", "^(.*)-[a-z0-9]+"
          )
        )
    - name: cluster_namespace_controller_pod_container:memory_pagefaults:rate
      query: >-
        sum by (cluster,namespace,controller,pod_name,container_name,scope,type) (
          label_replace(
            irate(
              container_memory_failures_total{container_name!=""}[5m]
            ),
            "controller", "$1",
            "pod_name", "^(.*)-[a-z0-9]+"
          )
        )
    - name: cluster_namespace_controller_pod_container:memory_oom:rate
      query: >-
        sum by (cluster,namespace,controller,pod_name,container_name,scope,type) (
          label_replace(
            irate(
              container_memory_failcnt{container_name!=""}[5m]
            ),
            "controller", "$1",
            "pod_name", "^(.*)-[a-z0-9]+"
          )
        )
    - name: cluster:memory_allocation:percent
      query: >-
        100 * sum by (cluster) (
          container_spec_memory_limit_bytes{pod_name!=""}
        ) / sum by (cluster) (
          machine_memory_bytes
        )
    - name: cluster:memory_used:percent
      query: >-
        100 * sum by (cluster) (
          container_memory_usage_bytes{pod_name!=""}
        ) / sum by (cluster) (
          machine_memory_bytes
        )
    - name: cluster:cpu_allocation:percent
      query: >-
        100 * sum by (cluster) (
          container_spec_cpu_shares{pod_name!=""}
        ) / sum by (cluster) (
          container_spec_cpu_shares{id="/"} * on(cluster,instance) machine_cpu_cores
        )
  alert:
    AvgKubeletRunningContainerCountLow:
      if: >-
        avg_over_time(kubelet_running_container_count[2m]) * 1.3 <
        avg_over_time(kubelet_running_container_count[10m])
      labels:
        severity: warning
        service: kubernetes
      annotations:
        summary: 'Container count is low'
        description: 'Container count from last 2m is lower than avarage from 10m'
    AvgKubeletRunningPODCountLow:
      if: >-
        avg_over_time(kubelet_running_pod_count[2m]) * 1.3 <
        avg_over_time(kubelet_running_pod_count[10m])
      labels:
        severity: warning
        service: kubernetes
      annotations:
        summary: 'POD count is low'
        description: 'POD count from last 2m is lower than avarage from 10m'
    ContainerScrapeError:
      if: 'container_scrape_error != 0'
      labels:
        severity: warning
        service: kubernetes
      annotations:
        summary: 'Fail to scrape container'
        description: 'Prometheus was not able to scrape metrics from container on {{ $labels.instance }}'
{% endraw %}
{%- if network is defined and network.get('engine', None) == 'calico' %}
{% raw %}
    ProcstatPidBird:
      if: >-
        absent(procstat_pid{process_name="bird"}) OR
        count(procstat_pid{process_name="bird"}) < count(up{job="kubernetes-node"} == 1)
      labels:
        severity: warning
        service: bird
      annotations:
        summary: 'Bird process is missing'
        description: 'Bird process is not running on all k8s nodes'
    ProcstatPidBird6:
      if: >-
        absent(procstat_pid{process_name="bird6"}) OR
        count(procstat_pid{process_name="bird6"}) < count(up{job="kubernetes-node"} == 1)
      labels:
        severity: warning
        service: bird6
      annotations:
        summary: 'Bird6 process is missing'
        description: 'Bird6 process is not running on all k8s nodes'
    ProcstatPidConfd:
      if: >-
        absent(procstat_pid{process_name="confd"}) OR
        count(procstat_pid{process_name="confd"}) < count(up{job="kubernetes-node"} == 1)
      labels:
        severity: warning
        service: confd
      annotations:
        summary: 'Confd process is missing'
        description: 'Confd process is not running on all k8s nodes'
    ProcstatPidCalicoFelix:
      if: >-
        absent(procstat_pid{process_name="calico-felix"}) OR
        count(procstat_pid{process_name="calico-felix"}) < count(up{job="kubernetes-node"} == 1)
      labels:
        severity: warning
        service: calico-felix
      annotations:
        summary: 'Calico-felix process is missing'
        description: 'Calico-felix process is not running on all k8s nodes'
{% endraw %}
{% endif %}
